(function() {
  var defaultPrecompiled;

  module.exports = defaultPrecompiled = {
    c: ["assert.h", "complex.h", "ctype.h", "errno.h", "fenv.h", "float.h", "inttypes.h", "iso646.h", "limits.h", "locale.h", "math.h", "setjmp.h", "signal.h", "stdalign.h", "stdarg.h", "stdatomic.h", "stdbool.h", "stddef.h", "stdint.h", "stdio.h", "stdlib.h", "stdnoreturn.h", "string.h", "tgmath.h", "threads.h", "time.h", "uchar.h", "wchar.h", "wctype.h"],
    cpp: ["cassert", "cctype", "cerrno", "cfloat", "ciso646", "climits", "clocale", "cmath", "csetjmp", "csignal", "cstdarg", "cstddef", "cstdio", "cstdlib", "cstring", "ctime", "cwchar", "cwctype", "deque", "list", "map", "queue", "set", "stack", "vector", "fstream", "iomanip", "ios", "iosfwd", "iostream", "istream", "ostream", "sstream", "streambuf", "algorithm", "bitset", "complex", "exception", "functional", "iterator", "limits", "locale", "memory", "new", "numeric", "stdexcept", "string", "typeinfo", "utility", "valarray"],
    objc: [],
    objcpp: []
  };

}).call(this);

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiL1VzZXJzL2dhZWxlbi8uYXRvbS9wYWNrYWdlcy9hdXRvY29tcGxldGUtY2xhbmcvbGliL2RlZmF1bHRQcmVjb21waWxlZC5jb2ZmZWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQSxNQUFBOztFQUFBLE1BQU0sQ0FBQyxPQUFQLEdBQ0Usa0JBQUEsR0FDRTtJQUFBLENBQUEsRUFBRyxDQUNELFVBREMsRUFFRCxXQUZDLEVBR0QsU0FIQyxFQUlELFNBSkMsRUFLRCxRQUxDLEVBTUQsU0FOQyxFQU9ELFlBUEMsRUFRRCxVQVJDLEVBU0QsVUFUQyxFQVVELFVBVkMsRUFXRCxRQVhDLEVBWUQsVUFaQyxFQWFELFVBYkMsRUFjRCxZQWRDLEVBZUQsVUFmQyxFQWdCRCxhQWhCQyxFQWlCRCxXQWpCQyxFQWtCRCxVQWxCQyxFQW1CRCxVQW5CQyxFQW9CRCxTQXBCQyxFQXFCRCxVQXJCQyxFQXNCRCxlQXRCQyxFQXVCRCxVQXZCQyxFQXdCRCxVQXhCQyxFQXlCRCxXQXpCQyxFQTBCRCxRQTFCQyxFQTJCRCxTQTNCQyxFQTRCRCxTQTVCQyxFQTZCRCxVQTdCQyxDQUFIO0lBK0JBLEdBQUEsRUFBSyxDQUNELFNBREMsRUFFRCxRQUZDLEVBR0QsUUFIQyxFQUlELFFBSkMsRUFLRCxTQUxDLEVBTUQsU0FOQyxFQU9ELFNBUEMsRUFRRCxPQVJDLEVBU0QsU0FUQyxFQVVELFNBVkMsRUFXRCxTQVhDLEVBWUQsU0FaQyxFQWFELFFBYkMsRUFjRCxTQWRDLEVBZUQsU0FmQyxFQWdCRCxPQWhCQyxFQWlCRCxRQWpCQyxFQWtCRCxTQWxCQyxFQW1CRCxPQW5CQyxFQW9CRCxNQXBCQyxFQXFCRCxLQXJCQyxFQXNCRCxPQXRCQyxFQXVCRCxLQXZCQyxFQXdCRCxPQXhCQyxFQXlCRCxRQXpCQyxFQTBCRCxTQTFCQyxFQTJCRCxTQTNCQyxFQTRCRCxLQTVCQyxFQTZCRCxRQTdCQyxFQThCRCxVQTlCQyxFQStCRCxTQS9CQyxFQWdDRCxTQWhDQyxFQWlDRCxTQWpDQyxFQWtDRCxXQWxDQyxFQW1DRCxXQW5DQyxFQW9DRCxRQXBDQyxFQXFDRCxTQXJDQyxFQXNDRCxXQXRDQyxFQXVDRCxZQXZDQyxFQXdDRCxVQXhDQyxFQXlDRCxRQXpDQyxFQTBDRCxRQTFDQyxFQTJDRCxRQTNDQyxFQTRDRCxLQTVDQyxFQTZDRCxTQTdDQyxFQThDRCxXQTlDQyxFQStDRCxRQS9DQyxFQWdERCxVQWhEQyxFQWlERCxTQWpEQyxFQWtERCxVQWxEQyxDQS9CTDtJQW1GQSxJQUFBLEVBQUssRUFuRkw7SUFvRkEsTUFBQSxFQUFPLEVBcEZQOztBQUZKIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPVxuICBkZWZhdWx0UHJlY29tcGlsZWQgPVxuICAgIGM6IFtcbiAgICAgIFwiYXNzZXJ0LmhcIixcbiAgICAgIFwiY29tcGxleC5oXCIsXG4gICAgICBcImN0eXBlLmhcIixcbiAgICAgIFwiZXJybm8uaFwiLFxuICAgICAgXCJmZW52LmhcIixcbiAgICAgIFwiZmxvYXQuaFwiLFxuICAgICAgXCJpbnR0eXBlcy5oXCIsXG4gICAgICBcImlzbzY0Ni5oXCIsXG4gICAgICBcImxpbWl0cy5oXCIsXG4gICAgICBcImxvY2FsZS5oXCIsXG4gICAgICBcIm1hdGguaFwiLFxuICAgICAgXCJzZXRqbXAuaFwiLFxuICAgICAgXCJzaWduYWwuaFwiLFxuICAgICAgXCJzdGRhbGlnbi5oXCIsXG4gICAgICBcInN0ZGFyZy5oXCIsXG4gICAgICBcInN0ZGF0b21pYy5oXCIsXG4gICAgICBcInN0ZGJvb2wuaFwiLFxuICAgICAgXCJzdGRkZWYuaFwiLFxuICAgICAgXCJzdGRpbnQuaFwiLFxuICAgICAgXCJzdGRpby5oXCIsXG4gICAgICBcInN0ZGxpYi5oXCIsXG4gICAgICBcInN0ZG5vcmV0dXJuLmhcIixcbiAgICAgIFwic3RyaW5nLmhcIixcbiAgICAgIFwidGdtYXRoLmhcIixcbiAgICAgIFwidGhyZWFkcy5oXCIsXG4gICAgICBcInRpbWUuaFwiLFxuICAgICAgXCJ1Y2hhci5oXCIsXG4gICAgICBcIndjaGFyLmhcIixcbiAgICAgIFwid2N0eXBlLmhcIixcbiAgICAgIF1cbiAgICBjcHA6IFtcbiAgICAgICAgXCJjYXNzZXJ0XCIsXG4gICAgICAgIFwiY2N0eXBlXCIsXG4gICAgICAgIFwiY2Vycm5vXCIsXG4gICAgICAgIFwiY2Zsb2F0XCIsXG4gICAgICAgIFwiY2lzbzY0NlwiLFxuICAgICAgICBcImNsaW1pdHNcIixcbiAgICAgICAgXCJjbG9jYWxlXCIsXG4gICAgICAgIFwiY21hdGhcIixcbiAgICAgICAgXCJjc2V0am1wXCIsXG4gICAgICAgIFwiY3NpZ25hbFwiLFxuICAgICAgICBcImNzdGRhcmdcIixcbiAgICAgICAgXCJjc3RkZGVmXCIsXG4gICAgICAgIFwiY3N0ZGlvXCIsXG4gICAgICAgIFwiY3N0ZGxpYlwiLFxuICAgICAgICBcImNzdHJpbmdcIixcbiAgICAgICAgXCJjdGltZVwiLFxuICAgICAgICBcImN3Y2hhclwiLFxuICAgICAgICBcImN3Y3R5cGVcIixcbiAgICAgICAgXCJkZXF1ZVwiLFxuICAgICAgICBcImxpc3RcIixcbiAgICAgICAgXCJtYXBcIixcbiAgICAgICAgXCJxdWV1ZVwiLFxuICAgICAgICBcInNldFwiLFxuICAgICAgICBcInN0YWNrXCIsXG4gICAgICAgIFwidmVjdG9yXCIsXG4gICAgICAgIFwiZnN0cmVhbVwiLFxuICAgICAgICBcImlvbWFuaXBcIixcbiAgICAgICAgXCJpb3NcIixcbiAgICAgICAgXCJpb3Nmd2RcIixcbiAgICAgICAgXCJpb3N0cmVhbVwiLFxuICAgICAgICBcImlzdHJlYW1cIixcbiAgICAgICAgXCJvc3RyZWFtXCIsXG4gICAgICAgIFwic3N0cmVhbVwiLFxuICAgICAgICBcInN0cmVhbWJ1ZlwiLFxuICAgICAgICBcImFsZ29yaXRobVwiLFxuICAgICAgICBcImJpdHNldFwiLFxuICAgICAgICBcImNvbXBsZXhcIixcbiAgICAgICAgXCJleGNlcHRpb25cIixcbiAgICAgICAgXCJmdW5jdGlvbmFsXCIsXG4gICAgICAgIFwiaXRlcmF0b3JcIixcbiAgICAgICAgXCJsaW1pdHNcIixcbiAgICAgICAgXCJsb2NhbGVcIixcbiAgICAgICAgXCJtZW1vcnlcIixcbiAgICAgICAgXCJuZXdcIixcbiAgICAgICAgXCJudW1lcmljXCIsXG4gICAgICAgIFwic3RkZXhjZXB0XCIsXG4gICAgICAgIFwic3RyaW5nXCIsXG4gICAgICAgIFwidHlwZWluZm9cIixcbiAgICAgICAgXCJ1dGlsaXR5XCIsXG4gICAgICAgIFwidmFsYXJyYXlcIixcbiAgICAgIF1cbiAgICBvYmpjOltdXG4gICAgb2JqY3BwOltdXG4iXX0=
